{"openapi": "3.0.0", "info": {"title": "Product Management API", "description": "A RESTful API for managing product inventory with validation and error handling", "version": "1.0.0", "contact": {"name": "API Support", "url": "https://github.com/yourusername/product-api"}}, "servers": [{"url": "http://localhost:5000", "description": "Development server"}], "tags": [{"name": "Products", "description": "Product management operations"}], "paths": {"/api/products": {"get": {"tags": ["Products"], "summary": "Get all products", "description": "Returns a list of all products in the inventory", "responses": {"200": {"description": "Successful operation", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Product"}}}}}, "500": {"description": "Internal server error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}}}, "post": {"tags": ["Products"], "summary": "Create a new product", "description": "Add a new product to the inventory. Name is required and must be <= 100 characters. Price and stock must be non-negative.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductInput"}}}}, "responses": {"201": {"description": "Product created successfully", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Product"}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationError"}}}}, "500": {"description": "Internal server error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}}}}, "/api/products/{product_id}": {"parameters": [{"name": "product_id", "in": "path", "required": true, "schema": {"type": "integer"}, "description": "ID of the product"}], "get": {"tags": ["Products"], "summary": "Get a product by ID", "description": "Returns a single product", "responses": {"200": {"description": "Successful operation", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Product"}}}}, "404": {"description": "Product not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}}}, "put": {"tags": ["Products"], "summary": "Update a product", "description": "Update an existing product. Name must be <= 100 characters. Price and stock must be non-negative.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductInput"}}}}, "responses": {"200": {"description": "Product updated successfully", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Product"}}}}, "404": {"description": "Product not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "400": {"description": "Validation error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationError"}}}}, "500": {"description": "Database error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}}}, "delete": {"tags": ["Products"], "summary": "Delete a product", "description": "Delete a product from the inventory", "responses": {"200": {"description": "Product deleted successfully", "content": {"application/json": {"schema": {"type": "object", "properties": {"message": {"type": "string", "example": "Product deleted successfully"}}}}}}, "404": {"description": "Product not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Database error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}}}}}, "components": {"schemas": {"Product": {"type": "object", "properties": {"id": {"type": "integer", "format": "int64", "example": 1}, "name": {"type": "string", "maxLength": 100, "example": "Sample Product"}, "description": {"type": "string", "example": "A detailed description of the product"}, "price": {"type": "number", "format": "float", "minimum": 0, "example": 29.99}, "stock": {"type": "integer", "minimum": 0, "example": 100}, "category": {"type": "string", "example": "Electronics"}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time"}}}, "ProductInput": {"type": "object", "required": ["name", "price", "stock"], "properties": {"name": {"type": "string", "maxLength": 100, "example": "New Product"}, "description": {"type": "string", "example": "Product description"}, "price": {"type": "number", "format": "float", "minimum": 0, "example": 29.99}, "stock": {"type": "integer", "minimum": 0, "example": 100}, "category": {"type": "string", "example": "Electronics"}}}, "Error": {"type": "object", "properties": {"error": {"type": "string", "example": "Internal server error"}}}, "ValidationError": {"type": "object", "properties": {"error": {"type": "string", "example": "Validation error"}, "message": {"type": "string", "example": "Price cannot be negative"}}}}}}